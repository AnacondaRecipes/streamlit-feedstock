{% set name = "streamlit" %}
{% set version = "1.42.0" %}

package:
  name: {{ name|lower }}-split
  version: {{ version }}

source:
  - url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
    sha256: 8c48494ccfad33e7d0bc5873151800b203cb71203bfd42bc7418940710ca4970
    folder: streamlit
  - url: https://github.com/{{ name }}/{{ name }}/archive/{{ version }}.tar.gz
    sha256: d13d8ed5f0b8b429febe0868619d7b42298e7badba266ee7fa73823039ce7de8
    folder: streamlit_tests

build:
  number: 0
  # Watchdog is not avaliable on win + py313
  # https://github.com/AnacondaRecipes/streamlit-feedstock/pull/25#discussion_r1951425010
  # Need to build watchdog >=4.0.2
  # https://github.com/streamlit/streamlit/blob/1.42.0/lib/setup.py#L143
  # python_requires=">=3.9, !=3.9.7"
  skip: True  # [py<39 or py>312]
  # toml is not avaaliable on linux-s390x
  skip: True  # [s390x]

requirements:
  host:
    - python
  run:
    - python

outputs:
  - name: streamlit
    script: build-output.sh  # [not win]
    script: build-output.bat  # [win]
    build:
      entry_points:
        - streamlit = streamlit.web.cli:main
    requirements:
      host:
        - pip
        - python
        - wheel
        - setuptools
      run:
        - python
        - altair >=4.0,<6
        - blinker >=1.0.0,<2
        - cachetools >=4.0,<6
        - click >=7.0,<9
        - numpy >=1.23,<3
        - packaging >=20,<25
        - pandas >=1.4.0,<3
        - pillow >=7.1.0,<12
        - protobuf >=3.20,<6
        - pyarrow >=7.0
        - requests >=2.27,<3
        - rich >=10.14.0,<14
        - tenacity >=8.1.0,<10
        - toml >=0.10.1,<2
        - typing_extensions >=4.4.0,<5
        - watchdog >=2.1.5,<7  # [not osx]
        - gitpython >=3.0.7,<4,!=3.1.19
        - pydeck >=0.8.0b4,<1
        - tornado >=6.0.3,<7
      run_constrained:
        - snowflake-snowpark-python >=1.17.0  # [py<312]
        - snowflake-connector-python >=3.3.0  # [py<312]
        - python !=3.9.7
    test:
      imports:
        - streamlit
      commands:
        - pip check
        - streamlit --help
      requires:
        - pip

  - name: streamlit-tests
    build:
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('streamlit', exact=True) }}

    # ALL PLATFORMS
    #streamlit_tests\lib\tests\streamlit\config_test.py::ConfigTest::test_check_conflicts_server_csrf
    # Logger troubles. For some reason mock_logger.warning.assert_called_once() return 0;
    #>           raise AssertionError(msg)
    #E           AssertionError: Expected 'warning' to have been called once. Called 0 times.
    {% set tests_to_ignore = "test_check_conflicts_server_csrf" %}
     #streamlit_tests/lib/tests/streamlit/web/server/app_static_file_handler_test.py::AppStaticFileHandlerTest::test_static_webp_image_200
    # >       assert response.headers["Content-Type"] == "image/webp"
    # E       AssertionError: assert 'application/octet-stream' == 'image/webp'
    # E
    # E         - image/webp
    # E         + application/octet-stream
    {% set tests_to_ignore = tests_to_ignore + " or test_static_webp_image_200" %}
    #streamlit_tests\lib\tests\streamlit\delta_generator_test.py::RunWarningTest::test_run_warning_absence
    #>           self.assertNotRegex("".join(logs.output), r"streamlit run")
    #E           AssertionError: Regex matched: 'streamlit run' matches 'streamlit run' in 'WARNING:streamlit:\n  \x1b[33m\x1b[1mWarning:\x1b[0m to view a Streamlit app on a browser, use Streamlit in a file and\n  run it with the following command:\n\n    streamlit run [FILE_NAME] [ARGUMENTS]WARNING:streamlit:irrelevant warning so assertLogs passes'
    {% set tests_to_ignore = tests_to_ignore + " or test_run_warning_absence" %}
    #streamlit_tests/lib/tests/streamlit/web/server/server_test.py::ServerTest::test_websocket_compression
    #>           return super().setUp()
    #>           raise RuntimeError("Runtime instance already exists!")
    #E           RuntimeError: Runtime instance already exists!
    {% set tests_to_ignore = tests_to_ignore + " or test_websocket_compression" %}
    #streamlit_tests/lib/tests/streamlit/web/server/server_test.py::ServerTest::test_websocket_compression_disabled
    #>           return super().setUp()
    #>           raise RuntimeError("Runtime instance already exists!")
    #E           RuntimeError: Runtime instance already exists!
    {% set tests_to_ignore = tests_to_ignore + " or test_websocket_compression_disabled" %}
    #streamlit_tests/lib/tests/streamlit/web/server/server_test.py::ServerTest::test_websocket_connect
    #>           return super().setUp()
    #>           raise RuntimeError("Runtime instance already exists!")
    #E           RuntimeError: Runtime instance already exists!
    {% set tests_to_ignore = tests_to_ignore + " or test_websocket_connect" %}
    # This tests need google microsoft credentials in .streamlit/secrets.toml to login with authlib. Won`t fix.
    #>       assert (
    #            "Authentication credentials in `.streamlit/secrets.toml` are missing for the "
    #            'authentication provider "invalid_provider". Please check your configuration.'
    #        ) == str(ex.exception)
    #E       assert 'Authenticati...onfiguration.' == 'To use authe...all Authlib`.'
    #E
    #E         - To use authentication features, you need to install Authlib>=1.3.2, e.g. via `pip install Authlib`.
    #E         + Authentication credentials in `.streamlit/secrets.toml` are missing for the authentication provider "invalid_provider". Please check your configuration.
    {% set tests_to_ignore = tests_to_ignore + " or test_user_login_0_google" %}
    {% set tests_to_ignore = tests_to_ignore + " or test_user_login_1_microsoft" %}
    {% set tests_to_ignore = tests_to_ignore + " or test_user_login_2_auth0" %}
    {% set tests_to_ignore = tests_to_ignore + " or test_user_login_cookie_secret_missing" %}
    {% set tests_to_ignore = tests_to_ignore + " or test_user_login_redirect_uri_missing" %}
    {% set tests_to_ignore = tests_to_ignore + " or test_user_login_required_fields_missing" %}
    {% set tests_to_ignore = tests_to_ignore + " or test_user_login_with_invalid_provider" %}
    #streamlit_tests\lib\tests\streamlit\watcher\local_sources_watcher_test.py::LocalSourcesWatcherTest::test_script_and_2_modules_in_series
    #>       self.assertEqual(fob.call_count, 2)  # dummy module and __init__.py
    #E       AssertionError: 0 != 2
    {% set tests_to_ignore = tests_to_ignore + " or test_script_and_2_modules_in_series" %}
    #streamlit_tests\lib\tests\streamlit\watcher\local_sources_watcher_test.py::LocalSourcesWatcherTest::test_just_script
    #>       self.assertEqual(fob.call_count, 1)  # __init__.py
    #E       AssertionError: 0 != 1
    {% set tests_to_ignore = tests_to_ignore + " or test_just_script" %}
    #streamlit_tests\lib\tests\streamlit\watcher\local_sources_watcher_test.py::LocalSourcesWatcherTest::test_misbehaved_module
    #>           raise AssertionError(msg)
    #E           AssertionError: Expected 'PathWatcher' to have been called once. Called 0 times.
    {% set tests_to_ignore = tests_to_ignore + " or test_misbehaved_module" %}
    #streamlit_tests\lib\tests\streamlit\watcher\local_sources_watcher_test.py::LocalSourcesWatcherTest::test_namespace_package_unloaded
    #>           self.assertNotIn("pkg", sys.modules)
    #E           AssertionError: 'pkg' unexpectedly found in {'pkg': <module 'tests.streamlit.watcher.test_data.namespace_package' (<_frozen_importlib_external._NamespaceLoader object at 0x000001D69EC05510>)>}
    {% set tests_to_ignore = tests_to_ignore + " or test_namespace_package_unloaded" %}
    #streamlit_tests\lib\tests\streamlit\watcher\local_sources_watcher_test.py::LocalSourcesWatcherTest::test_nested_module_parent_unloaded
    #>           self.assertNotIn("NESTED_MODULE_CHILD", sys.modules)
    #E           AssertionError: 'NESTED_MODULE_CHILD' unexpectedly found in {'DUMMY_MODULE_1': <module 'tests.streamlit.watcher.test_data.dummy_module1' from 'C:\\Users\\aosipo\\miniconda3\\conda-bld\\streamlit-split_1739411773394\\test_tmp\\streamlit_tests\\lib\\tests\\streamlit\\watcher\\test_data\\dummy_module1.py'>, 'NESTED_MODULE_PARENT': <module 'tests.streamlit.watcher.test_data.nested_module_parent' from 'C:\\Users\\aosipo\\miniconda3\\conda-bld\\streamlit-split_1739411773394\\test_tmp\\streamlit_tests\\lib\\tests\\streamlit\\watcher\\test_data\\nested_module_parent.py'>, 'NESTED_MODULE_CHILD': <module 'tests.streamlit.watcher.test_data.nested_module_child' from 'C:\\Users\\aosipo\\miniconda3\\conda-bld\\streamlit-split_1739411773394\\test_tmp\\streamlit_tests\\lib\\tests\\streamlit\\watcher\\test_data\\nested_module_child.py'>}
    {% set tests_to_ignore = tests_to_ignore + " or test_nested_module_parent_unloaded" %}
    #streamlit_tests\lib\tests\streamlit\watcher\local_sources_watcher_test.py::LocalSourcesWatcherTest::test_script_and_2_modules_at_once
    #>       self.assertEqual(fob.call_count, 3)  # dummy modules and __init__.py
    #E       AssertionError: 0 != 3
    {% set tests_to_ignore = tests_to_ignore + " or test_script_and_2_modules_at_once" %}
    #streamlit_tests/lib/tests/streamlit/web/server/server_test.py::ScriptCheckEndpointDoesNotExistTest::test_endpoint
    #>       self.assertEqual(404, response.code)
    #E       AssertionError: 404 != 200
    {% set tests_to_ignore = tests_to_ignore + " or test_endpoint" %}
    #streamlit_tests/lib/tests/streamlit/config_test.py::ConfigTest::test_server_headless_via_atom_plugin
    #>       self.assertEqual(True, config.get_option("server.headless"))
    #E       AssertionError: True != False
    {% set tests_to_ignore = tests_to_ignore + " or test_server_headless_via_atom_plugin" %}
    # +++++++++++++++WINDOWS ONLY+++++++++++++++
    #+++++++++
    #For some reason sqlite server is not started on win.
    #+++++++++
    #streamlit_tests\lib\tests\streamlit\dataframe_util_test.py::DataframeUtilTest::test_verify_sqlite3_integration
    #>       con = sqlite3.connect("file::memory:")
    #E       sqlite3.OperationalError: unable to open database file
    {% set tests_to_ignore = tests_to_ignore + " or test_verify_sqlite3_integration" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\elements\help_test.py::StHelpTest::test_class_members
    #>           self.assertEqual(ds.members[i].value, expected[1])
    #E           AssertionError: '<property object at 0x000001D69DF72CF0>' != ''
    {% set tests_to_ignore = tests_to_ignore + " or test_class_members" %}  # [win]
    # Need to set utf-8 encoding type on windows.
    #streamlit_tests\lib\tests\streamlit\testing\element_tree_test.py::test_alert
    #>       return codecs.charmap_encode(input,self.errors,encoding_table)[0]
    #E       UnicodeEncodeError: 'charmap' codec can't encode character '\U0001f6a8' in position 83: character maps to <undefined>
    {% set tests_to_ignore = tests_to_ignore + " or test_alert" %}  # [win]
    #+++++++++
    # Problems inside the is_active_session method on windows.
    #+++++++++
    #streamlit_tests\lib\tests\streamlit\runtime\runtime_test.py::RuntimeTest::test_handle_session_client_disconnected. Won`t fix.
    #>           raise_disconnected_error.assert_called_once()
    #E           AssertionError: Expected 'write_forward_msg' to have been called once. Called 0 times.
    {% set tests_to_ignore = tests_to_ignore + " or test_handle_session_client_disconnected" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\write_test.py::StreamlitWriteTest::test_obj_instance
    #>           p.assert_called_once_with(my_instance)
    #E           AssertionError: Expected 'help' to be called once. Called 0 times.
    {% set tests_to_ignore = tests_to_ignore + " or test_obj_instance" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\write_test.py::StreamlitWriteTest::test_repr_html
    #>           p.assert_called_once_with(fake)
    #E           AssertionError: Expected 'help' to be called once. Called 0 times.
    {% set tests_to_ignore = tests_to_ignore + " or test_repr_html" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\write_test.py::StreamlitWriteTest::test_repr_html_no_html_tags_in_string
    #>           p2.assert_called_once_with(obj)
    #E           AssertionError: Expected 'help' to be called once. Called 0 times.
    {% set tests_to_ignore = tests_to_ignore + " or test_repr_html_no_html_tags_in_string" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\write_test.py::StreamlitWriteTest::test_repr_html_not_callable
    #>           p.assert_called_once_with(fake)
    #E           AssertionError: Expected 'help' to be called once. Called 0 times.
    {% set tests_to_ignore = tests_to_ignore + " or test_repr_html_not_callable" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\connections\base_connection_test.py::BaseConnectionDefaultMethodTests::test_st_write
    #>           raise AssertionError(msg)
    #E           AssertionError: Expected 'help' to be called once. Called 0 times.
    {% set tests_to_ignore = tests_to_ignore + " or test_st_write" %}  # [win]
    #+++++++++
    # This tests on windows failed because were written for Unix. Won't fix.
    #+++++++++
    #streamlit_tests\lib\tests\streamlit\components_test.py::DeclareComponentTest::test_only_path_pathlib
    #>       self.assertEqual(PATH, component.path)
    #E       AssertionError: 'not/a/real/path' != 'not\\a\\real\\path'
    #E       - not/a/real/path
    #E       ?    ^ ^    ^
    #E       + not\a\real\path
    #E       ?    ^ ^    ^
    {% set tests_to_ignore = tests_to_ignore + " or test_only_path_pathlib" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\components_test.py::ComponentRegistryTest::test_register_component_with_path
    #>           raise StreamlitAPIException(f"No such component directory: '{abspath}'")
    #E           streamlit.errors.StreamlitAPIException: No such component directory: 'C:\a\test\component\directory'
    {% set tests_to_ignore = tests_to_ignore + " or test_register_component_with_path" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\components_test.py::ComponentRegistryTest::test_register_duplicate_path
    #>           raise StreamlitAPIException(f"No such component directory: '{abspath}'")
    #E           streamlit.errors.StreamlitAPIException: No such component directory: 'C:\a\test\component\directory'
    {% set tests_to_ignore = tests_to_ignore + " or test_register_duplicate_path" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\elements\exception_test.py::ExceptionProtoTest::test_external_error_stack_starts_with_user_module_3
    #>       self.assertIsNotNone(match)
    #E       AssertionError: unexpectedly None
    {% set tests_to_ignore = tests_to_ignore + " or test_external_error_stack_starts_with_user_module_3" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\runtime\caching\cache_data_api_test.py::CacheDataPersistTest::test_persist_path
    #>       self.assertIsNotNone(match)
    #E       AssertionError: unexpectedly None
    {% set tests_to_ignore = tests_to_ignore + " or test_persist_path" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\runtime\caching\hashing_test.py::NotHashableTest::test_non_hashable
    #>           with open(data_or_path, "rb") as file:
    #E           PermissionError: [Errno 13] Permission denied: 'C:\\Users\\aosipo\\AppData\\Local\\Temp\\tmpbku1h9ls.vtt'
    {% set tests_to_ignore = tests_to_ignore + " or test_non_hashable" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\elements\video_test.py::VideoTest::test_st_video_subtitles_path
    #>           with open(data_or_path, "rb") as file:
    #E           PermissionError: [Errno 13] Permission denied: 'C:\\Users\\aosipo\\AppData\\Local\\Temp\\tmpbku1h9ls.vtt'
    {% set tests_to_ignore = tests_to_ignore + " or test_st_video_subtitles_path" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\file_util_test.py::FileUtilTest::test_get_app_static_dir
    #E       AssertionError: 'C:\\[47 chars]-split_1739411773394\\test_tmp\\.streamlit\\some/random/file' != 'C:\\[47 chars]-split_1739411773394\\test_tmp\\.streamlit\\some\\random\\file'
    #E       - %SRC_DIR%\.streamlit\some/random/file
    #E       ?                                                                                            ^      ^
    #E       + %SRC_DIR%\.streamlit\some\random\file
    #E       ? 
    {% set tests_to_ignore = tests_to_ignore + " or test_get_app_static_dir" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\file_util_test.py::FileUtilTest::test_get_project_streamlit_file_path
    #E       AssertionError: 'C:\\[47 chars]-split_1739411773394\\test_tmp\\.streamlit\\some/random/file' != 'C:\\[47 chars]-split_1739411773394\\test_tmp\\.streamlit\\some\\random\\file'
    #E       - %SRC_DIR%\.streamlit\some/random/file
    #E       ?                                                                                            ^      ^
    #E       + %SRC_DIR%\.streamlit\some\random\file
    #E       ?   
    {% set tests_to_ignore = tests_to_ignore + " or test_get_project_streamlit_file_path" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\file_util_test.py::FileUtilTest::test_streamlit_write_exception
    #>           self.assertEqual(str(e.value), error_msg)
    #E           - Unable to write file: C:\some\cache\file
    #E           ?                       ^^^    ^     ^
    #E           + Unable to write file: /some/cache/file
    #E           ?                       ^    ^     ^
    {% set tests_to_ignore = tests_to_ignore + " or test_streamlit_write_exception" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\file_util_test.py::FileInPythonPathTest::test_get_main_script_directory
    #>       self.assertEqual(file_util.normalize_path_join("/some", "random", "path"),"/some/random/path")
    #E       AssertionError: '\\some\\random\\path' != '/some/random/path'
    #E       - \some\random\path
    #E       ? ^    ^      ^
    #E       + /some/random/path
    #E       ? ^    ^      ^
    {% set tests_to_ignore = tests_to_ignore + " or test_get_main_script_directory" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\file_util_test.py::FileInPythonPathTest::test_normalize_path_join
    #>       self.assertEqual(file_util.normalize_path_join("/some", "random", "path"),"/some/random/path")
    #E       AssertionError: '\\some\\random\\path' != '/some/random/path'
    #E       - \some\random\path
    #E       ? ^    ^      ^
    #E       + /some/random/path
    #E       ? ^    ^      ^
    {% set tests_to_ignore = tests_to_ignore + " or test_normalize_path_join" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\watcher\event_based_path_watcher_test.py::EventBasedPathWatcherTest::test_correctly_resolves_watched_file_path
    #>       assert folder_path == "/this/is/my/dir"
    #E       AssertionError: assert 'C:\\this\\is\\my\\dir' == '/this/is/my/dir'
    #E         - /this/is/my/dir
    #E         + C:\this\is\my\dir
    {% set tests_to_ignore = tests_to_ignore + " or test_correctly_resolves_watched_file_path" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\watcher\event_based_path_watcher_test.py::EventBasedPathWatcherTest::test_correctly_resolves_watched_folder_path
    #>       assert folder_path == "/this/is/my/dir"
    #E       AssertionError: assert 'C:\\this\\is\\my\\dir' == '/this/is/my/dir'
    #E         - /this/is/my/dir
    #E         + C:\this\is\my\dir
    {% set tests_to_ignore = tests_to_ignore + " or test_correctly_resolves_watched_folder_path" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\watcher\path_watcher_test.py::FileWatcherTest::test_watch_dir_kwarg_plumbing
    #>           raise AssertionError(_error_message()) from cause
    #E           AssertionError: expected call not found.
    #E           Expected: EventBasedPathWatcher('some/dir/path/', <Mock id='2021302406352'>, glob_pattern='*.py', allow_nonexistent=True)
    #E           Actual: EventBasedPathWatcher('some/dir/path\\', <Mock id='2021302406352'>, glob_pattern='*.py', allow_nonexistent=True)
    {% set tests_to_ignore = tests_to_ignore + " or test_watch_dir_kwarg_plumbing" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\web\server\routes_test.py::StaticFileHandlerTest
    #>           with os.scandir(path) as scandir_it:
    #E           NotADirectoryError: [WinError 267] The directory name is invalid: 'C:\\Users\\aosipo\\AppData\\Local\\Temp\\tmpxhrw7ljd\\tmpdi2q4imkstylesheet.css'
    {% set tests_to_ignore = tests_to_ignore + " or StaticFileHandlerTest" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\runtime\credentials_test.py::CredentialsClassTest::test_Credentials_save
    #>           raise AssertionError(_error_message()) from cause
    #E           AssertionError: expected call not found.
    #E           Expected: makedirs('/mock/home/folder\\.streamlit', exist_ok=True)
    #E           Actual: makedirs('/mock/home/folder/.streamlit', exist_ok=True)
    {% set tests_to_ignore = tests_to_ignore + " or test_Credentials_save" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\runtime\credentials_test.py::CredentialsModulesTest::test_show_emojis
    #>       self.assertIn("\U0001f44b", email_prompt())
    #E       AssertionError: '\U0001f44b' not found in '\\n      \\x1b[1mWelcome to Streamlit!\\x1b[0m\\n\\n      If you\u2019d like to receive helpful onboarding emails, news, offers, promotions,\\n      and the occasional swag, please enter your email address below. Otherwise,\\n      leave this field blank.\\n\\n      \\x1b[34mEmail: \\x1b[0m'
    {% set tests_to_ignore = tests_to_ignore + " or test_show_emojis" %}  # [win]
    #streamlit_tests\lib\tests\streamlit\runtime\state\session_state_test.py::SessionStateMethodTests::test_remove_stale_widgets
    #>       assert generated_widget_key not in self.session_state
    #E       AssertionError: assert '$$ID-removed_widget' not in SessionState(_old_state={'$$ID-existing_widget': True, '$$ID-removed_widget': True, 'val_set_via_state': 5}, _new_session_state={'foo': 'bar2'}, _new_widget_state=WStates(widget_metadata={'$$ID-existing_widget': WidgetMetadata(id='$$ID-existing_widget', value_type='bool_value'), '$$ID-removed_widget': WidgetMetadata(id='$$ID-removed_widget', value_type='bool_value')}), _key_id_mapper=KeyIdMapper(_key_id_mapping={}, _id_key_mapping={}), query_params=QueryParams(_query_params={}))
    #E        +  where SessionState(_old_state={'$$ID-existing_widget': True, '$$ID-removed_widget': True, 'val_set_via_state': 5}, _new_session_state={'foo': 'bar2'}, _new_widget_state=WStates(widget_metadata={'$$ID-existing_widget': WidgetMetadata(id='$$ID-existing_widget', value_type='bool_value'), '$$ID-removed_widget': WidgetMetadata(id='$$ID-removed_widget', value_type='bool_value')}), _key_id_mapper=KeyIdMapper(_key_id_mapping={}, _id_key_mapping={}), query_params=QueryParams(_query_params={})) = <tests.streamlit.runtime.state.session_state_test.SessionStateMethodTests testMethod=test_remove_stale_widgets>.session_state
    {% set tests_to_ignore = tests_to_ignore + " or test_remove_stale_widgets" %}

    test:
      source_files:
        - streamlit_tests/lib/tests
        - streamlit_tests/lib/setup.py
        - streamlit_tests/lib/pytest.ini
      imports:
        - streamlit
      commands:
        - pip check
        - streamlit --help
        # git_util_test skipped, no need to test git.
        # Problems in MockSessionClient. Data frame can`t have enough time to make push in the MockSessionClient::list. I think await self.tick_runtime_loop() broken on windows. Won`t fix. Tests failed randomly o linux and windows. Just skip runtime tests.
        - pytest -n auto -v -m "not (require_integration or slow or performance)" -k "not ({{ tests_to_ignore }})" --ignore=streamlit_tests/lib/tests/streamlit/git_util_test.py --ignore=streamlit_tests/lib/tests/streamlit/runtime/runtime_test.py streamlit_tests/lib/tests
      requires:
        - pip
        - pytest
        - parameterized 
        # upstream authlib >=1.3.2, but only 1.3.1 is avaliable in main
        - authlib >=1.3.1
        - requests-mock
        - watchdog >=2.1.5
        - plotly >=5.3.1
        - testfixtures
        - matplotlib-base >=3.3.4
        - hypothesis >=6.17.4
        - python-graphviz >=0.17
        # upstream pytest-benchmark==5.1.0, but only 4.0.0 is avaliable in main
        - pytest-benchmark >=4.0.0
        - pytest-xdist
        - pytest-rerunfailures
        - pytest-cov

about:
  home: https://streamlit.io
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: The fastest way to build data apps in Python
  description: |
    Streamlit lets you turn data scripts into sharable web apps in minutes, not weeks.
    It's all Python, open-source, and free!
  doc_url: https://docs.streamlit.io/
  dev_url: https://github.com/streamlit/streamlit

extra:
  recipe-maintainers:
    - raybellwaves
    - randyzwitch
    - kmcgrady
  feedstock-name: streamlit
  skip-lints:
    # As we are only running the pytests in streamlit-tests we do not require python build tools
    - missing_python_build_tool
    - missing_wheel
